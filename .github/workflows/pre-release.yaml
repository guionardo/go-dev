name: Pre-release

on:
  pull_request:
    types: [closed]

jobs:
  if_merged:
    name: "If merged"
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo The PR was merged
          echo "REF: ${{ github.ref }}"
          echo "HEAD $GITHUB_HEAD_REF"

  if_release_version:
    name: "Checking version"
    runs-on: ubuntu-latest
    steps:
      - run: |
          if [[ $GITHUB_HEAD_REF =~ release\/(v[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}) ]]; then
            echo "Version ${BASH_REMATCH[1]}"
          else
            exit 1
          fi

  build:
    name: "Build"
    needs: ["if_merged","if_release_version"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo Continue the job
          export LATESTLOG=$(git log -1 --pretty=%B)
          export SOURCEBRANCH=$(echo $LATESTLOG | awk -F '\\\\n' '{print $1}' |  awk -F '/' '{print $2}' | awk '{print $1}')
          echo "Source branch $SOURCEBRANCH"
          echo "HEAD $GITHUB_HEAD_REF"
  #   -
  #     id: check-tag
  #   run: |
  #         if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
  #             echo ::set-output name=match::true
  #         fi
  # - name: Build
  #       if: steps.check-tag.outputs.match == 'true'
  #       run: |
  #         echo "Tag is a match"

  # releases-matrix:
  #   name: Release Go Binary
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
  #       goos: [linux]
  #       goarch: [amd64]
  #       exclude:
  #         - goarch: arm64
  #           goos: windows
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: wangyoucao577/go-release-action@v1.32
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         goos: ${{ matrix.goos }}
  #         goarch: ${{ matrix.goarch }}
  #         goversion: "https://dl.google.com/go/go1.19.2.linux-amd64.tar.gz"
  #         extra_files: LICENSE README.md
  #         build_flags: -v
