name: Pre-release

on:
  pull_request:
    types: [opened]

jobs:
  merged_release_version:
    name: "If not merged and has a release version"
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check_version.outputs.version}}
    steps:
    - id: check_version
      run: |
          if [[ ! $GITHUB_HEAD_REF =~ release\/(v[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}) ]]; then
            exit 1          
          fi

          echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT

  get_latest_release:
    name: "Get latest release"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.check_version.outputs.version }}
    steps:
    - uses: actions/checkout@v3
    - id: check_version
      run: |
        echo "version=(jq .version pkg/consts/metadata.json)" >> $GITHUB_OUTPUT



  build:
    name: "Build"
    needs: ["merged_release_version","get_latest_release"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          VERSION=${{needs.merged_release_version.outputs.version}}
          echo $VERSION
          CURRENT_VERSION=${{needs.get_latest_release.outputs.version}}
          echo $CURRENT_VERSION


 